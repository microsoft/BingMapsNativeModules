variables:
  sdk: 'iphoneos'
  configuration: 'Build'
  msMapsModulesPath: 'iOS/MSMapsModules'
  msMapsModulesToRootPath: '../../'
  msMapsModulesWorkspacePath: '$(msMapsModulesPath)/MSMapsModules.xcworkspace'
  testAppKeysPath: '$(msMapsModulesPath)/MSMapsModulesTestApp/keys.plist'
  referenceAppPath: 'iOS/MSMapsModulesReferenceApp'
  referenceAppWorkspacePath: '$(referenceAppPath)/MSMapsModulesReferenceApp.xcworkspace'
  
trigger:
- master

jobs:
- job: Build_Android
  pool:
    vmImage: 'windows-latest'
  steps:
    # Create dummy secrets.gradle
  - bash: |
      echo ext.credentialsKey = "\"DummyKey\"" > secrets.gradle
      echo `<secrets.gradle`
    displayName: Create secrets.gradle
    workingDirectory: 'Android/Samples/app'
  - task: Gradle@2
    inputs:
      workingDirectory: 'Android/Samples'
      gradleWrapperFile: 'Android/Samples/gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: false
      testResultsFiles: '**/TEST-*.xml'
      tasks: 'build'

- job: Build_iOS
  pool:
    vmImage: 'macOS-10.14'
  steps:
  - bash: |
      brew install clang-format
      cd $(msMapsModulesPath)
      ./format-all.txt
      ../../BuildScripts/CheckForChanges.sh "iOS code is not properly formatted; run iOS/MSMapsModules/format-all.txt"
    displayName: 'Check source code formatting'
  - bash: |
      echo '<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"> <plist version="1.0"> <dict> <key>credentialsKey</key> <string>DummyKey</string> </dict> </plist>' > $(testAppKeysPath)
    displayName: 'Create keys.plist for MSMapsModulesTestApp'
  - bash: |
      echo '<?xml version="1.0" encoding="UTF-8"?> <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd"> <plist version="1.0"> <dict> <key>credentialsKey</key> <string>DummyKey</string> </dict> </plist>' > $(referenceAppPath)/keys.plist
    displayName: 'Create keys.plist for MSMapsModulesReferenceApp'
  - task: CocoaPods@0
    displayName: 'Install pods for MSMapsModules'
    inputs:
      workingDirectory: '$(referenceAppPath)'
      projectDirectory: '$(referenceAppPath)'
      forceRepoUpdate: true
  - task: CocoaPods@0
    displayName: 'Install pods for MSMapsModulesReferenceApp'
    inputs:
      workingDirectory: '$(msMapsModulesPath)'
      projectDirectory: '$(msMapsModulesPath)'
      forceRepoUpdate: true
  - task: Xcode@5
    displayName: 'Build Static Library MSMapsModules'
    inputs:
      actions: 'clean build'
      sdk: '$(sdk)'
      xcWorkspacePath: '$(msMapsModulesWorkspacePath)'
      scheme: 'MSMapsModules'
      configuration: '$(configuration)'
      xcodeVersion: 'default'
      packageApp: false
  - task: Xcode@5
    displayName: 'Build MSMapsModulesTestApp'
    inputs:
      actions: 'clean build'
      sdk: '$(sdk)'
      xcWorkspacePath: '$(msMapsModulesWorkspacePath)'
      scheme: 'MSMapsModulesTestApp'
      configuration: '$(configuration)'
      xcodeVersion: 'default'
      packageApp: false
  - task: Xcode@5
    displayName: 'Build MSMapsModulesReferenceApp'
    inputs:
      actions: 'clean build'
      sdk: '$(sdk)'
      xcWorkspacePath: '$(referenceAppWorkspacePath)'
      scheme: 'MSMapsModulesReferenceApp'
      configuration: '$(configuration)'
      xcodeVersion: 'default'
      packageApp: false